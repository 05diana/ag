
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app.kubernetes.io/framework: monitoring
    app.kubernetes.io/component: core
    app.kubernetes.io/name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/framework: monitoring
      app.kubernetes.io/component: core
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/framework: monitoring
        app.kubernetes.io/component: core
        app.kubernetes.io/name: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yaml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=1h
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        - --web.enable-lifecycle
        name: prometheus
        image: prom/prometheus
        imagePullPolicy: Always
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: 200m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
          - mountPath: /tmp
            name: tmp-storage
            readOnly: false
          - mountPath: /etc/prometheus/
            name: prometheus-config
            readOnly: true
          - mountPath: /prometheus
            name: prometheus-storage
            readOnly: false
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65200
        runAsNonRoot: true
        runAsUser: 65400
      volumes:
        - emptyDir: {}
          name: tmp-storage
        - emptyDir: {}
          name: prometheus-storage
        - name: prometheus-config
          secret:
            secretName: prometheus-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring
  labels:
    app.kubernetes.io/framework: monitoring
    app.kubernetes.io/component: core
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/framework: monitoring
      app.kubernetes.io/component: core
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/framework: monitoring
        app.kubernetes.io/component: core
        app.kubernetes.io/name: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /tmp
            name: tmp-storage
            readOnly: false
          - mountPath: /etc/grafana
            name: grafana-config
            readOnly: true
          - mountPath: /var/lib/grafana
            name: grafana-storage
            readOnly: false
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-prometheus-ds
            readOnly: true
          - mountPath: /etc/grafana/provisioning/dashboards
            name: grafana-dashboards-config
            readOnly: true
          - mountPath: /etc/grafana/provisioning/dashboards/0
            name: grafana-dashboards-test
            readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65500
        runAsNonRoot: true
        runAsUser: 65500
      volumes:
        - emptyDir: {}
          name: tmp-storage
        - emptyDir: {}
          name: grafana-storage
        - name: grafana-config
          secret:
            secretName: grafana-config
        - name: grafana-prometheus-ds
          secret:
            secretName: grafana-prometheus-ds
        - name: grafana-dashboards-config
          secret:
            secretName: grafana-dashboards-config
        - name: grafana-dashboards-test
          secret:
            secretName: grafana-dashboards-test
