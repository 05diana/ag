---
version: '2.0'

configs:
  config.prometheus:
    file: ./prometheus/prometheus.yaml
  config.grafana:
    file: ./grafana/grafana.ini
  config.grafana.datasource:
    file: ./grafana/prometheus_ds.yaml
  config.grafana.dashboard:
    file: ./grafana/dashboard.yaml
  define.grafana.dashboard:
    file: ./grafana/dashboard.json

services:
  api:
    image: 06ampolleta/haiyaexe:latest
    restart:  always
    container_name: api
    ports:
      - 5000:5000
    environment:
      - "API_WORKERS=8"

  prometheus:
    image: prom/prometheus
    restart: always
    container_name: prometheus
    configs:
      - source: config.prometheus
        target: /etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    container_name: grafana
    configs:
      - source: config.grafana
        target: /etc/grafana/grafana.ini
      - source: config.grafana.datasource
        target: /etc/grafana/provisioning/datasources/prometheus_ds.yaml
        mode: 444
      - source: config.grafana.dashboard
        target: /etc/grafana/provisioning/dashboards/home.yaml
        mode: 444
      - source: define.grafana.dashboard
        target: /etc/grafana/provisioning/dashboards/home.json
    ports:
      - 3000:3000

  tester:
    image: kalilinux/kali-rolling
    container_name: test
    stdin_open: true
    tty: true
